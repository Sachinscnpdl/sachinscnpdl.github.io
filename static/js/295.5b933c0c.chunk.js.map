{"version":3,"file":"static/js/295.5b933c0c.chunk.js","mappings":"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","sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Experience.js","components/Resume/Skills/CategoryButton.js","components/Resume/Skills/SkillBar.js","components/Resume/Skills.js","components/Resume/Courses/Course.js","components/Resume/Courses.js","components/Resume/References.js","data/resume/courses.js","data/resume/degrees.js","data/resume/work.js","data/resume/skills.js","pages/Resume.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <div className=\"degree-card\">\n      <div className=\"degree-header\">\n        <div className=\"degree-title-group\">\n          <h3 className=\"degree-text\">{data.degree}</h3>\n          <p className=\"school\">\n            <a href={data.link} className=\"link\">{data.school}</a>\n          </p>\n        </div>\n        <span className=\"year\">{data.year}</span>\n      </div>\n      <div className=\"degree-details\">\n        {data.thesis && (\n          <p className=\"thesis\">{data.thesis}</p>\n        )}\n        {(data.highlights1 || data.highlights2) && (\n          <ul className=\"degree-highlights\">\n            {data.highlights1 && <li>{data.highlights1}</li>}\n            {data.highlights2 && <li>{data.highlights2}</li>}\n          </ul>\n        )}\n      </div>\n    </div>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    year: PropTypes.string.isRequired,\n    thesis: PropTypes.string,\n    highlights1: PropTypes.string,\n    highlights2: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Degree;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h3>Education</h3>\n    </div>\n    {data.map((degree) => (\n      <Degree data={degree} key={degree.school} />\n    ))}\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      school: PropTypes.string,\n      degree: PropTypes.string,\n      link: PropTypes.string,\n      year: PropTypes.number,\n    }),\n  ),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport Markdown from 'markdown-to-jsx';\n\nconst Job = ({\n  data: {\n    name, position, url, startDate, endDate, summary, highlights,\n  },\n}) => (\n  <article className=\"job-container\">\n    <div className=\"job-card\">\n      <div className=\"job-header\">\n        <h3 className=\"job-title\">\n          <a href={url} className=\"link\">{name}</a> - {position}\n        </h3>\n        <span className=\"daterange\">\n          {dayjs(startDate).format('MMMM YYYY')} -{' '}\n          {endDate ? dayjs(endDate).format('MMMM YYYY') : 'Present'}\n        </span>\n      </div>\n      {(summary || highlights) && (\n        <div className=\"job-details\">\n          {summary && (\n            <Markdown\n              options={{\n                overrides: {\n                  p: {\n                    props: {\n                      className: 'summary',\n                    },\n                  },\n                },\n              }}\n            >\n              {summary}\n            </Markdown>\n          )}\n          {highlights && (\n            <ul className=\"highlights\">\n              {highlights.map((highlight) => (\n                <li key={highlight}>{highlight}</li>\n              ))}\n            </ul>\n          )}\n        </div>\n      )}\n    </div>\n  </article>\n);\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    startDate: PropTypes.string.isRequired,\n    endDate: PropTypes.string,\n    summary: PropTypes.string,\n    highlights: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default Job;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h3>Experience</h3>\n    </div>\n    {data.map((job) => (\n      <Job data={job} key={`${job.name}-${job.position}`} />\n    ))}\n  </div>\n);\n\nExperience.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string,\n      position: PropTypes.string,\n      url: PropTypes.string,\n      startDate: PropTypes.string,\n      endDate: PropTypes.string,\n      highlights: PropTypes.arrayOf(PropTypes.string),\n      summary: PropTypes.string,\n    }),\n  ),\n};\n\nExperience.defaultProps = {\n  data: [],\n};\n\nexport default Experience;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst CategoryButton = ({ handleClick, active, label }) => {\n  const [isHovered, setIsHovered] = useState(false);\n\n  return (\n    <button\n      className={`skillbutton ${active[label] ? 'skillbutton-active' : ''}`}\n      type=\"button\"\n      onClick={() => handleClick(label)}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      style={{\n        margin: '0 0.5rem',\n        padding: '0.3rem 0.7rem',\n        border: '1px solid #007bff',\n        borderRadius: '15px',\n        background: active[label] ? '#007bff' : 'transparent',\n        color: active[label] ? '#fff' : '#007bff',\n        position: 'relative',\n        overflow: 'hidden',\n        transition: 'all 0.3s ease',\n        cursor: 'pointer',\n      }}\n    >\n      {label}\n      <span\n        style={{\n          position: 'absolute',\n          bottom: 0,\n          left: isHovered || active[label] ? '0' : '100%',\n          width: '100%',\n          height: '2px',\n          background: '#007bff',\n          transition: 'left 0.3s ease',\n        }}\n      />\n    </button>\n  );\n};\n\nCategoryButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  active: PropTypes.objectOf(PropTypes.bool.isRequired).isRequired,\n};\n\nexport default CategoryButton;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SkillBar = ({ data, categories }) => {\n  const { category, competency, title } = data;\n  const [isHovered, setIsHovered] = useState(false);\n\n  // --- Color Logic Refinement ---\n  const matchingCategoryColors = categories\n    .filter((cat) => category.includes(cat.name))\n    .map((cat) => cat.color);\n\n  // Use the first category color as the primary for the gradient start\n  const primaryCategoryColor = matchingCategoryColors.length > 0\n    ? matchingCategoryColors[0]\n    : '#ccc'; // Fallback to gray\n\n  const getExpertiseColor = (comp) => {\n    // Adjust hue, saturation, and lightness for a pleasant gradient end color\n    const hue = 240 - (comp * 40); // Shifts from blue (240) towards orange/red (0)\n    const saturation = 85 + (comp * 2); // Slightly higher saturation\n    const lightness = 45 + (comp * 5); // Brighter as competency increases\n    return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\n  };\n\n  const expertiseEndColor = getExpertiseColor(competency);\n\n  // --- Layout & Style Calculations ---\n\n  const pulseAnimation = competency >= 4 ? 'pulse 1.5s infinite' : 'none';\n\n  // Define the maximum visual length for the bar. This also influences the max width of the skill card.\n  const MAX_VISUAL_BAR_LENGTH = 250; // Adjust this value to control the overall length of the bars\n\n  // Styles for the main skill card container\n  const skillCardStyle = { // Renamed from skillBoxStyle for clarity\n    display: 'flex',\n    flexDirection: 'column', // Stack children vertically\n    alignItems: 'flex-start', // Left-align all children (text row and bar container)\n    marginBottom: '1rem', // Space between skill cards\n    width: '100%', // Allows the card to take full width in its grid/column\n    // Calculate maxWidth based on the bar length plus percentage text width and internal padding/margins\n    maxWidth: `${MAX_VISUAL_BAR_LENGTH + 70 + (2 * 16)}px`, // Bar Max + Percent MinWidth + (2 * Padding)\n    boxSizing: 'border-box',\n    padding: '16px', // Internal padding for the entire card\n    background: '#fff', // Clean white background for the card\n    borderRadius: '12px', // Softer, more modern corners\n    boxShadow: '0 6px 12px rgba(0,0,0,0.1)', // More pronounced but soft shadow\n    transition: 'transform 0.2s ease-in-out', // Added hover transition for the card\n    cursor: 'default', // Indicate it's not clickable by default\n    ':hover': {\n      transform: 'translateY(-3px)', // Slight lift on hover for the card\n    },\n  };\n\n  // Styles for the row containing title and percentage\n  const skillInfoRowStyle = {\n    display: 'flex',\n    width: '100%', // Ensure text row spans full width within the card\n    justifyContent: 'space-between', // Push title left, percentage right\n    alignItems: 'center',\n    marginBottom: '12px', // Space between text row and bar\n  };\n\n  const titleStyle = {\n    background: 'transparent', // **KEY CHANGE:** Make title background transparent\n    color: '#333', // Darker text color for better contrast on white background\n    fontWeight: '700',\n    fontSize: '1rem', // Slightly larger font for titles\n    whiteSpace: 'nowrap', // Prevent text from wrapping\n    overflow: 'hidden',\n    textOverflow: 'ellipsis', // Add ellipsis (...) for long titles\n    flexGrow: 1, // Allow title to take available space\n    flexShrink: 1, // Allow title to shrink (and show ellipsis)\n    textAlign: 'left',\n    paddingRight: '10px', // Small padding to separate from percentage if title is long\n  };\n\n  const percentTextStyle = {\n    minWidth: '60px', // Slightly smaller min-width for percentage\n    padding: '4px 8px', // Adjusted padding\n    background: '#f0f0f0', // Light gray background for percentage display\n    borderRadius: '6px', // Rounded corners for the percentage box\n    boxShadow: '0 1px 3px rgba(0,0,0,0.08)', // Softer shadow for percentage\n    color: '#555', // Slightly softer text color\n    fontWeight: '700',\n    textAlign: 'center',\n    fontSize: '0.85rem', // Slightly smaller font for percentage\n    flexShrink: 0,\n    flexGrow: 0,\n  };\n\n  const barContainerStyle = {\n    width: `${MAX_VISUAL_BAR_LENGTH}px`, // Fixed width for the bar container (the 100% reference)\n    height: '16px', // Slightly thinner bar for elegance\n    background: '#e0e0e0', // Light gray background for the empty part of the bar (the \"track\")\n    borderRadius: '8px', // Rounded corners for the bar track\n    overflow: 'hidden', // Crucial to clip the inner bar\n    flexShrink: 0,\n    flexGrow: 0,\n    position: 'relative',\n    animation: pulseAnimation,\n  };\n\n  const barStyle = {\n    background: `linear-gradient(90deg, ${primaryCategoryColor}, ${expertiseEndColor})`, // Single, continuous gradient\n    width: `${(competency / 5) * 100}%`, // Length based on expertise\n    height: '100%', // Fill the container's height\n    transition: 'width 0.5s ease-in-out', // Only width transitions for smoothness\n    borderRadius: '8px', // Match container for full fill\n    minWidth: '0px',\n    // Removed scaleY transform here; it's better on the overall card or for a more subtle effect.\n  };\n\n  return (\n    <div\n      className=\"skill-card\" // Class name for better semantics\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      style={skillCardStyle}\n    >\n      <div className=\"skill-info-row\" style={skillInfoRowStyle}>\n        <div className=\"skill-title\" style={titleStyle}> {/* Class name for clarity */}\n          <span>{title}</span>\n        </div>\n        <div className=\"skill-percent\" style={percentTextStyle}> {/* Class name for clarity */}\n          {isHovered ? `${Math.round((competency / 5) * 100)}%` : `${competency} / 5`}\n        </div>\n      </div>\n      <div className=\"skill-bar-container\" style={barContainerStyle}>\n        <div className=\"skill-bar\" style={barStyle} /> {/* Class name for clarity */}\n      </div>\n    </div>\n  );\n};\n\nSkillBar.propTypes = {\n  data: PropTypes.shape({\n    category: PropTypes.arrayOf(PropTypes.string).isRequired,\n    competency: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  categories: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      color: PropTypes.string,\n    }),\n  ),\n};\n\nSkillBar.defaultProps = {\n  categories: [],\n};\n\nexport default SkillBar;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CategoryButton from './Skills/CategoryButton';\nimport SkillBar from './Skills/SkillBar';\n\nconst Skills = ({ skills, categories }) => {\n  const initialButtons = Object.fromEntries(\n    [['All', false]].concat(categories.map(({ name }) => [name, false])),\n  );\n\n  const [buttons, setButtons] = useState(initialButtons);\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    setIsVisible(true);\n  }, []);\n\n  const handleChildClick = (label) => {\n    const newButtons = Object.keys(buttons).reduce(\n      (obj, key) => ({\n        ...obj,\n        [key]: label === key && !buttons[key],\n      }),\n      {},\n    );\n    newButtons.All = !Object.keys(buttons).some((key) => newButtons[key]);\n    setButtons(newButtons);\n  };\n\n  const getRows = () => {\n    const actCat = Object.keys(buttons).reduce(\n      (cat, key) => (buttons[key] ? key : cat),\n      'All',\n    );\n\n    const comparator = (a, b) => {\n      let ret = 0;\n      if (a.competency > b.competency) ret = -1;\n      else if (a.competency < b.competency) ret = 1;\n      else if (a.category[0] > b.category[0]) ret = -1;\n      else if (a.category[0] < b.category[0]) ret = 1;\n      else if (a.title > b.title) ret = 1;\n      else if (a.title < b.title) ret = -1;\n      return ret;\n    };\n\n    const filteredSkills = skills\n      .sort(comparator)\n      .filter((skill) => actCat === 'All' || skill.category.includes(actCat));\n\n    const third = Math.ceil(filteredSkills.length / 3);\n    return [\n      filteredSkills.slice(0, third),\n      filteredSkills.slice(third, third * 2),\n      filteredSkills.slice(third * 2),\n    ];\n  };\n\n  const getButtons = () => Object.keys(buttons).map((key) => (\n    <CategoryButton\n      label={key}\n      key={key}\n      active={buttons}\n      handleClick={handleChildClick}\n    />\n  ));\n\n  return (\n    <div className=\"skills\">\n      <div className=\"link-to\" id=\"skills\" />\n      <div className=\"title\" style={{ opacity: isVisible ? 1 : 0, transition: 'opacity 1s ease-in' }}>\n        <h3 style={{ color: '#007bff', textAlign: 'center', fontSize: '2.2rem', marginBottom: '0.5rem' }}>My Expertise Unleashed</h3>\n        <p style={{ color: '#666', fontStyle: 'italic', textAlign: 'center', fontSize: '1.1rem' }}>\n          *A playful take on my skills—real mastery happens in the lab and code! Explore my strengths below.\n        </p>\n      </div>\n      <div className=\"skill-button-container\" style={{ textAlign: 'center', margin: '1.5rem 0' }}>\n        {getButtons()}\n      </div>\n      <div className=\"skill-row-container\" style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gap: '2rem' }}>\n        <div>\n          {getRows()[0].map((skill) => (\n            <div key={skill.title} className=\"skill-card\">\n              <SkillBar categories={categories} data={skill} />\n            </div>\n          ))}\n        </div>\n        <div>\n          {getRows()[1].map((skill) => (\n            <div key={skill.title} className=\"skill-card\">\n              <SkillBar categories={categories} data={skill} />\n            </div>\n          ))}\n        </div>\n        <div>\n          {getRows()[2].map((skill) => (\n            <div key={skill.title} className=\"skill-card\">\n              <SkillBar categories={categories} data={skill} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSkills.propTypes = {\n  skills: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      competency: PropTypes.number,\n      category: PropTypes.arrayOf(PropTypes.string),\n    }),\n  ),\n  categories: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      color: PropTypes.string,\n    }),\n  ),\n};\n\nSkills.defaultProps = {\n  skills: [],\n  categories: [],\n};\n\nexport default Skills;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Course = ({ data, last }) => (\n  <li className=\"course-container\">\n    <a href={data.link}>\n      <h4 className=\"course-number\">{data.number}:</h4>\n      <p className=\"course-name\">{data.title}</p>\n    </a>\n    {!last && (\n      <div className=\"course-dot\">\n        <p className=\"course-name\"> &#8226;</p>\n      </div>\n    )}\n  </li>\n);\n\nCourse.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  last: PropTypes.bool,\n};\n\nCourse.defaultProps = {\n  last: false,\n};\n\nexport default Course;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Course from './Courses/Course';\n\nconst getRows = (courses) => courses\n  .sort((a, b) => {\n    let ret = 0;\n    if (a.university > b.university) ret = -1;\n    else if (a.university < b.university) ret = 1;\n    else if (a.number > b.number) ret = 1;\n    else if (a.number < b.number) ret = -1;\n    return ret;\n  })\n  .map((course, idx) => (\n    <Course\n      data={course}\n      key={course.title}\n      last={idx === courses.length - 1}\n    />\n  ));\n\nconst Courses = ({ data }) => (\n  <div className=\"courses\">\n    <div className=\"link-to\" id=\"courses\" />\n    <div className=\"title\">\n      <h3>Selected Courses</h3>\n    </div>\n    <ul className=\"course-list\">{getRows(data)}</ul>\n  </div>\n);\n\nCourses.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      number: PropTypes.string,\n      link: PropTypes.string,\n      university: PropTypes.string,\n    }),\n  ),\n};\n\nCourses.defaultProps = {\n  data: [],\n};\n\nexport default Courses;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst References = () => (\n  <div className=\"references\">\n    <div className=\"link-to\" id=\"references\" />\n    <div className=\"title\">\n      <Link to=\"/contact\">\n        <h3>References are available upon request</h3>\n      </Link>\n    </div>\n  </div>\n);\n\nexport default References;\n","const courses = [\n \n];\n\nexport default courses;\n","const degrees = [\n  {\n    school: 'The Silesian University of Technology, Gliwice, Poland',\n    degree: 'Doctor of Philosophy - PhD, Mechanical Engineering',\n    link: 'https://www.polsl.pl/en/',\n    year: 'Feb 2023 - Present',\n    thesis: 'Thesis: Scale-Bridging Computational and Data-Driven Design of Microstructures in Multicomponent Alloys for Advanced Functional Materials',\n    highlights1: [\n      '  Degined computational framework for scale-bridging Multi-physics interactions of mutli-component alloys.',\n     \n    ],\n      highlights2: [ ' Received Rector’s Grant (2024) for high-impact publications, acquired projects, or scientific and research work.', ],\n  },\n  {\n    school: 'Tribhuvan University, IOE, Thapathali Campus, Nepal',\n    degree: 'M.Sc. Engineering in Mechanical Design and Manufacturing',\n    link: 'https://www.ioe.edu.np',\n    year: '2020 - 2022',\n    thesis: 'Thesis: Towards Accelerated Design of Multi-Principal Element Alloys with Optimized Hardness and Elongation Features by an Ensemble of Neural Network',\n    highlights1: 'Received University Grants Commission (UGC, Nepal) Master Research Support Award (Award No: MRS-78-79-Engg-10)',\n  },\n  {\n    school: 'Tribhuvan University, IOE, Thapathali Campus, Nepal',\n    degree: 'BE in Mechanical Engineering',\n    link: 'https://www.ioe.edu.np',\n    year: '2014 - 2018',\n    thesis: 'Final Year Project: Design, Fabrication, and Testing of Banana Fibre Extraction Machine',\n    highlights1: 'Abhiskar Fellowship (2018) awarded by Institute for Social and Environmental Transition -Nepal (ISET-N).'\n  },\n  {\n    school: 'Prasadi Academy',\n    degree: 'Higher Secondary Education, Science',\n    link: 'http://www.prasadiacademy.edu.np',\n    year: '2012 - 2014',\n    thesis: '',\n  },\n\n  {\n    school: 'Mahendra Adarsha Vidyashram, Lalitpur, Nepal',\n    degree: 'Secondary Education',\n    link: 'http://www.prasadiacademy.edu.np',\n    year: 'Graduated on 2012',\n\n  },\n\n];\n\nexport default degrees;\n","/**\n * @typedef {Object} Position\n * Conforms to https://jsonresume.org/schema/\n *\n * @property {string} name - Name of the company\n * @property {string} position - Position title\n * @property {string} url - Company website\n * @property {string} startDate - Start date of the position in YYYY-MM-DD format\n * @property {string|undefined} endDate - End date of the position in YYYY-MM-DD format.\n * If undefined, the position is still active.\n * @property {string|undefined} summary - html/markdown summary of the position\n * @property {string[]} highlights - plain text highlights of the position (bulleted list)\n */\nconst work = [\n  {\n    name: 'Silesian University of Technology, Poland',\n    position: 'Graduate Researcher',\n    url: 'https://www.polsl.pl/en/',\n    startDate: '2023-04-01', // Changed to April 2023\n    endDate: null,\n    summary: 'Research team member in the National Science Centre (NCN), Poland, funded project.',\n    highlights: [\n      'Conducting PhD research in computational materials science, focusing on multicomponent Functional alloys.',\n      'Designed multiscale computational framework to study multi-physics interfacial phenomenon in multi-component alloys.',\n    ],\n  },\n  {\n    name: 'COSMOS College of Management and Technology, Nepal',\n    position: 'Lecturer',\n    url: 'https://cosmoscollege.edu.np/',\n    startDate: '2022-02-01',\n    endDate: '2023-01-31',\n    summary: 'Delivered lectures and instructed in laboratory on mechanical engineering subjects.',\n    highlights: [\n      'Delivered lectures on Thermal Science (MEC 111) and Engineering Drawing (MEC 120).',\n    ],\n  },\n  {\n    name: 'IOE, Thapathali Campus, Tribhuvan University, Nepal',\n    position: 'Teaching Assistant',\n    url: 'https://www.ioe.edu.np/',\n    startDate: '2021-11-01',\n    endDate: '2023-02-28',\n    summary: 'Teaching core mechanical engineering courses.',\n    highlights: [\n      'Teaching Engineering Drawing I (ME401), Engineering Drawing II (ME451), Computer Aided Drawing (ME 505).',\n    ],\n  },\n  {\n    name: 'Calcgen Solutions, Nepal',\n    position: 'Mechanical Design Engineer',\n    url: '', // Add actual URL if available\n    startDate: '2019-06-01',\n    endDate: '2021-11-30',\n    summary: '', // No specific summary provided, can add if needed\n    highlights: [\n      'Conducted finite element analysis and stress analysis of pressure vessel components.',\n      'Performed mechanical calculations and drafting of pressure vessels based on ASME Section VIII.',\n    ],\n  },\n  {\n    name: 'Nepal Airlines Corporation, Nepal',\n    position: 'Intern',\n    url: 'https://www.nepalairlines.com.np/', // Add actual URL if available\n    startDate: '2018-09-01',\n    endDate: '2018-12-31',\n    summary: '', // No specific summary provided, can add if needed\n    highlights: [\n      'Diagnosed aircraft vehicles.',\n      'Assisted in the repair and maintenance of various aircraft models.',\n    ],\n  },\n];\n\nexport default work;","const skills = [\n  // Simulation and Computational Physics\n  {\n    title: 'Finite Element Analysis (FEA)',\n    competency: 4,\n    category: ['Simulation ', 'Engineering Applications']\n  },\n  {\n    title: 'Phase Field Modeling',\n    competency: 4,\n    category: ['Simulation ', 'Materials Science']\n  },\n  {\n    title: 'DFT',\n    competency: 3,\n    category: ['Simulation ', 'Materials Science']\n  },\n  {\n    title: 'Solid Mechanics',\n    competency: 3,\n    category: ['Simulation ', 'Engineering Applications']\n  },\n  {\n    title: 'Computational Thermodynamics',\n    competency: 3,\n    category: ['Simulation ', 'Materials Science']\n  },\n  {\n    title: 'Microstructure Modeling',\n    competency: 4,\n    category: ['Simulation ', 'Materials Science']\n  },\n\n\n  // Machine Learning and Data Science\n  {\n    title: 'Machine Learning (ML)',\n    competency: 5,\n    category: ['ML & Data Science', 'Programming ']\n  },\n  {\n    title: 'Data Analysis',\n    competency: 3,\n    category: ['ML & Data Science']\n  },\n\n  {\n    title: 'Data Visualization',\n    competency: 4,\n    category: ['ML & Data Science']\n  },\n  {\n    title: 'Graph Theory',\n    competency: 3,\n    category: ['ML & Data Science']\n  },\n  {\n    title: 'Statistical Modeling',\n    competency: 3,\n    category: ['ML & Data Science']\n  },\n\n  // Programming \n  {\n    title: 'Python Programming',\n    competency: 5,\n    category: ['Programming ', 'ML & Data Science', 'Simulation ', 'Materials Informatics']\n  },\n  {\n    title: 'MATLAB Scripting',\n    competency: 3,\n    category: ['Programming ', 'Simulation ']\n  },\n  {\n    title: 'C++ Development',\n    competency: 4,\n    category: ['Programming ', 'Simulation ', 'Engineering Applications']\n  },\n  {\n    title: 'Fortran 90',\n    competency: 3,\n    category: ['Programming ', 'Simulation ']\n  },\n  {\n    title: 'HPC',\n    competency: 3,\n    category: ['Programming ', 'Simulation ']\n  },\n\n  // Materials Science\n  {\n    title: 'Crystallography',\n    competency: 3,\n    category: ['Materials Science', 'Simulation ']\n  },\n  {\n    title: 'Characterization',\n    competency: 3,\n    category: ['Materials Science']\n  },\n\n  // Materials Informatics\n  {\n    title: 'Informatics & AI',\n    competency: 4,\n    category: ['Materials Informatics', 'ML & Data Science', 'Materials Science']\n  },\n  {\n    title: 'Material Featurization',\n    competency: 3,\n    category: ['Materials Informatics', 'Programming ']\n  },\n\n  // Engineering Applications\n  {\n    title: 'Design & Optimization',\n    competency: 3,\n    category: ['Engineering Applications', 'Simulation ']\n  },\n  {\n    title: 'Stress Analysis',\n    competency: 3,\n    category: ['Engineering Applications', 'Simulation ']\n  }\n].map((skill) => ({ ...skill, category: skill.category.sort() }));\n\nconst colors = [\n  '#6968b3', // Simulation al\n  '#37b1f5', // Machine Learning and Data Science\n  '#40494e', // Programming \n  '#e47272', // Materials Science\n  '#cc7b94', // Engineering Applications\n  '#8a2be2'  // Materials Informatics (new color for the new category)\n];\n\nconst categories = [\n  { name: 'Simulation ', color: '#6968b3' },\n  { name: 'ML & Data Science', color: '#37b1f5' },\n  { name: 'Programming ', color: '#40494e' },\n  { name: 'Materials Science', color: '#e47272' },\n  { name: 'Engineering Applications', color: '#cc7b94' },\n  { name: 'Materials Informatics', color: '#8a2be2' } // New category\n];\n\nexport { categories, skills };","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Experience from '../components/Resume/Experience';\nimport Skills from '../components/Resume/Skills';\nimport Courses from '../components/Resume/Courses';\nimport References from '../components/Resume/References';\n\nimport courses from '../data/resume/courses';\nimport degrees from '../data/resume/degrees';\nimport work from '../data/resume/work';\nimport { skills, categories } from '../data/resume/skills';\n\n// NOTE: sections are displayed in order defined.\nconst sections = {\n  Education: () => <Education data={degrees} />,\n  Experience: () => <Experience data={work} />,\n  Skills: () => <Skills skills={skills} categories={categories} />,\n  Courses: () => <Courses data={courses} />,\n  References: () => <References />,\n};\n\nconst Resume = () => (\n  <Main\n    title=\"Resume\"\n    description=\"Sachin Poudel's Resume.\"\n  >\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <h2>\n            <Link to=\"resume\">Resume</Link>\n          </h2>\n          <div className=\"header-actions\">\n            <div className=\"link-container\">\n              {Object.keys(sections).map((sec) => (\n                <h4 key={sec}>\n                  <a href={`#${sec.toLowerCase()}`}>{sec}</a>\n                </h4>\n              ))}\n            </div>\n            <div className=\"pdf-container\">\n              <a\n                href=\"/SachinCV.pdf\"\n                className=\"button primary\"\n                download=\"SachinCV.pdf\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Resume PDF\n              </a>\n            </div>\n          </div>\n        </div>\n      </header>\n      {Object.entries(sections).map(([name, Section]) => (\n        <Section key={name} />\n      ))}\n    </article>\n  </Main>\n);\n\nexport default Resume;"],"names":["_ref","data","_jsx","className","children","_jsxs","degree","href","link","school","year","thesis","highlights1","highlights2","Education","id","map","Degree","defaultProps","name","position","url","startDate","endDate","summary","highlights","dayjs","format","Markdown","options","overrides","p","props","highlight","Experience","job","Job","handleClick","active","label","isHovered","setIsHovered","useState","type","onClick","onMouseEnter","onMouseLeave","style","margin","padding","border","borderRadius","background","color","overflow","transition","cursor","bottom","left","width","height","SkillBar","categories","category","competency","title","matchingCategoryColors","filter","cat","includes","comp","skillCardStyle","display","flexDirection","alignItems","marginBottom","maxWidth","boxSizing","boxShadow","transform","barContainerStyle","flexShrink","flexGrow","animation","barStyle","length","minWidth","justifyContent","fontWeight","fontSize","whiteSpace","textOverflow","textAlign","paddingRight","Math","round","Skills","skills","initialButtons","Object","fromEntries","concat","_ref2","buttons","setButtons","isVisible","setIsVisible","useEffect","handleChildClick","newButtons","keys","reduce","obj","key","All","some","getRows","actCat","filteredSkills","sort","comparator","a","b","ret","skill","third","ceil","slice","opacity","fontStyle","CategoryButton","gridTemplateColumns","gap","Course","last","number","courses","university","course","idx","Courses","References","Link","to","sections","degrees","work","Resume","Main","description","sec","toLowerCase","download","target","rel","entries","Section"],"sourceRoot":""}